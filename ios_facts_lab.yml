---
###############################################################################
# This playbook utilizes the ios_facts ansible module to retrieve a standard
# set of information returned within a structured data set.
#
#
# EXECUTION:
# ansible-playbook ios_facts_lab.yml
# Note: the command above works because of the environment defined in the
# ansible.cfg file
#
# ansible-playbook -i hosts ios_facts_lab.yml
#
###############################################################################

- name: Collect device facts with the ios_facts module and display selected values
  # hosts: "{{ inventory | default('all') }}"
  hosts: cisco_xe
  gather_facts: false
  ignore_errors: yes
  connection: network_cli

  tasks:
    - name: Gather Facts with the facts module
      ios_facts:
        gather_subset: all
      # Save the results into a variable called facts_output
      register: facts_output

    # Lets display the entire response before trying to pluck out specific data
    - debug: var=facts_output

    # Start decomposing facts_output to get to the hostname, version, and model
    # Note that Ansible allows the use of the shorter dotted notation for accessing keys in data structures
    # You can interpret below as facts_output["ansible_facts"]["ansible_net_hostname"]
    - debug: var=facts_output.ansible_facts.ansible_net_hostname
    - debug: var=facts_output.ansible_facts.ansible_net_version
    - debug: var=facts_output.ansible_facts.ansible_net_model

    - name: Display debug module msg with all variables of interest
      debug:
        msg: "Device with hostname {{ facts_output.ansible_facts.ansible_net_hostname }} is of model type
        {{ facts_output.ansible_facts.ansible_net_model }} running software version {{ facts_output.ansible_facts.ansible_net_version }}"